// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VivenciarGenerateOrder.Infra.Context;

namespace VivenciarGenerateOrder.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("PatientId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Discharged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalRegister")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(11)");

                    b.Property<Guid?>("ResponsiblePsychologistId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SponsorId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResponsiblePsychologistId");

                    b.HasIndex("SponsorId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Professional", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("ProfessionalId");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professional");
                });

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Sponsor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("SponsorId");

                    b.Property<bool>("Company")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalRegister")
                        .IsRequired()
                        .HasColumnType("VARCHAR(18)");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("Id");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Patient", b =>
                {
                    b.HasOne("VivenciarGenerateOrder.Domain.Entities.Professional", "ResponsiblePsychologist")
                        .WithMany()
                        .HasForeignKey("ResponsiblePsychologistId");

                    b.HasOne("VivenciarGenerateOrder.Domain.Entities.Sponsor", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId");

                    b.OwnsOne("VivenciarGenerateOrder.Domain.Commom.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("City");

                            b1.Property<string>("MoreIfo")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("MoreIfo");

                            b1.Property<string>("Number")
                                .HasColumnType("VARCHAR(20)")
                                .HasColumnName("Number");

                            b1.Property<int>("State")
                                .HasColumnType("INTEGER")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("VARCHAR(9)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("PatientId");

                            b1.ToTable("Patient");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.Navigation("Address");

                    b.Navigation("ResponsiblePsychologist");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Professional", b =>
                {
                    b.OwnsOne("VivenciarGenerateOrder.Domain.Commom.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ProfessionalId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("City");

                            b1.Property<string>("MoreIfo")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("MoreIfo");

                            b1.Property<string>("Number")
                                .HasColumnType("VARCHAR(20)")
                                .HasColumnName("Number");

                            b1.Property<int>("State")
                                .HasColumnType("INTEGER")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("VARCHAR(9)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("ProfessionalId");

                            b1.ToTable("Professional");

                            b1.WithOwner()
                                .HasForeignKey("ProfessionalId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("VivenciarGenerateOrder.Domain.Entities.Sponsor", b =>
                {
                    b.OwnsOne("VivenciarGenerateOrder.Domain.Commom.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("SponsorId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("City");

                            b1.Property<string>("MoreIfo")
                                .HasColumnType("VARCHAR(50)")
                                .HasColumnName("MoreIfo");

                            b1.Property<string>("Number")
                                .HasColumnType("VARCHAR(20)")
                                .HasColumnName("Number");

                            b1.Property<int>("State")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Street")
                                .HasColumnType("VARCHAR(100)")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("VARCHAR(9)")
                                .HasColumnName("ZipCode");

                            b1.HasKey("SponsorId");

                            b1.ToTable("Sponsor");

                            b1.WithOwner()
                                .HasForeignKey("SponsorId");
                        });

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
